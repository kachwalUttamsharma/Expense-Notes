{"version":3,"sources":["components/Expenses/Date/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem/ExpenseItem.js","components/Expenses/ExpensesList/ExpenseList.js","components/Expenses/Filter/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpenseChart/ExpensesChart.js","components/Expenses/Expense.js","components/NewExpense/ExpenseForm/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","Card","classes","children","ExpenseItem","title","class","amount","ExpensesList","items","length","map","item","id","ExpensesFilter","value","selected","onChange","event","onFilterChange","target","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointsValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","expense","getMonth","Expense","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","filterValue","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expanseData","Date","onSaveExpenseData","type","min","step","onClick","onCancle","NewExpense","prop","isEditing","setIsEditing","enteredExpenseData","expenseData","random","onAddExpense","DUMMY_EXPANSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fc6bc790.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./ExpenseDate.css\";\n\nfunction ExpenseDate(props) {\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n  const year = props.date.getFullYear();\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n      <div className=\"expense-date__day\">{day}</div>\n    </div>\n  );\n}\n\nexport default ExpenseDate;\n","import React from \"react\";\nimport \"./Card.css\";\n\nfunction Card(props) {\n  let classes = \"card \" + props.className;\n  return <div className={classes}>{props.children}</div>;\n}\n\nexport default Card;\n","import \"./ExpenseItem.css\";\nimport React from \"react\";\nimport ExpenseDate from \"../Date/ExpenseDate\";\nimport Card from \"../../UI/Card\";\n\nfunction ExpenseItem(props) {\n  return (\n    <Card className=\"expense-item\">\n      <ExpenseDate date={props.date} />\n      <div className=\"expense-item__description\">\n        <h2>{props.title}</h2>\n        <div class=\"expense-item__price\">${props.amount}</div>\n      </div>\n    </Card>\n  );\n}\n\nexport default ExpenseItem;\n","import React from \"react\";\nimport ExpenseItem from \"../ExpenseItem/ExpenseItem\";\nimport \"./ExpenseList.css\";\n\nconst ExpensesList = (props) => {\n  if (props.items.length === 0) {\n    return <h2 className=\"expenses-list_fallback\">Found no expenses.</h2>;\n  }\n\n  return (\n    <ul className=\"expenses-list\">\n      {props.items.map((item) => {\n        return (\n          <ExpenseItem\n            key={item.id}\n            title={item.title}\n            amount={item.amount}\n            date={item.date}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default ExpensesList;\n","import React from \"react\";\n\nimport \"./ExpensesFilter.css\";\n\nconst ExpensesFilter = (props) => {\n  // const [filterValue, setFilterValue] = useState(\"\");\n  const FilterChangeHandler = (event) => {\n    props.onFilterChange(event.target.value);\n  };\n\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={FilterChangeHandler}>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import React from \"react\";\nimport \"./ChartBar.css\";\n\nconst ChartBar = (props) => {\n  let barFillHeight = \"0%\";\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n  }\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import React from \"react\";\nimport ChartBar from \"./ChartBar\";\nimport \"./Chart.css\";\n\nconst Chart = (props) => {\n  const dataPointsValues = props.dataPoints.map((dataPoint) => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointsValues);\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from \"react\";\nimport Chart from \"../../Chart/Chart\";\n\nconst ExpensesChart = (props) => {\n  const chartDataPoints = [\n    { label: \"Jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 },\n  ];\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n  return <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpensesChart;\n","import React, { useState } from \"react\";\nimport ExpenseList from \"./ExpensesList/ExpenseList\";\nimport ExpensesFilter from \"./Filter/ExpensesFilter\";\nimport ExpensesChart from \"./ExpenseChart/ExpensesChart\";\nimport \"./Expense.css\";\nimport Card from \"../UI/Card\";\n\nfunction Expense(props) {\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n  const filterChangeHandler = (filterValue) => {\n    setFilteredYear(filterValue);\n  };\n\n  const filteredExpenses = props.expense.filter((item) => {\n    return item.date.getFullYear().toString() === filteredYear;\n  });\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          onFilterChange={filterChangeHandler}\n          selected={filteredYear}\n        />\n        <ExpensesChart expenses={filteredExpenses} />\n        <ExpenseList items={filteredExpenses} />\n      </Card>\n    </div>\n  );\n}\nexport default Expense;\n","import React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\n\nfunction ExpenseForm(props) {\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n  };\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n  };\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const expanseData = {\n      title: enteredTitle,\n      amount: +enteredAmount,\n      date: new Date(enteredDate),\n    };\n    props.onSaveExpenseData(expanseData);\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n  };\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input\n            type=\"text\"\n            onChange={titleChangeHandler}\n            value={enteredTitle}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            onChange={amountChangeHandler}\n            value={enteredAmount}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            onChange={dateChangeHandler}\n            value={enteredDate}\n          />\n        </div>\n        <div className=\"new-expense__actions\">\n          <button type=\"button\" onClick={props.onCancle}>\n            Cancle\n          </button>\n          <button type=\"submit\">Add Expense</button>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default ExpenseForm;\n","import React, { useState } from \"react\";\nimport \"./NewExpense.css\";\nimport ExpenseForm from \"./ExpenseForm/ExpenseForm\";\n\nfunction NewExpense(prop) {\n  const [isEditing, setIsEditing] = useState(false);\n  function saveExpenseDataHandler(enteredExpenseData) {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString(),\n    };\n    prop.onAddExpense(expenseData);\n    setIsEditing(false);\n  }\n  const startEditingHandler = () => {\n    setIsEditing(true);\n  };\n\n  const stopEditingHandler = () => {\n    setIsEditing(false);\n  };\n  return (\n    <div className=\"new-expense\">\n      {!isEditing && (\n        <button onClick={startEditingHandler}>Add New Expense</button>\n      )}\n      {isEditing && (\n        <ExpenseForm\n          onSaveExpenseData={saveExpenseDataHandler}\n          onCancle={stopEditingHandler}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default NewExpense;\n","import React, { useState } from \"react\";\nimport Expense from \"./components/Expenses/Expense\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPANSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMMY_EXPANSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expense expense={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}